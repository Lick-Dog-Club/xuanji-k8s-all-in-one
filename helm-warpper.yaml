apiVersion: v1
kind: ConfigMap
metadata:
  name: helm-warpper-configmap
  labels:
    app: helm-warpper
data:
  config: |
    uploadPath: /tmp/charts
    helmRepos:
      - name: xuanji
        url: http://chartmuseum-chartmuseum.default.svc.cluster.local:8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: helm-warpper
  name: helm-warpper
spec:
  replicas: 1
  selector:
    matchLabels:
      app: helm-warpper
  template:
    metadata:
      labels:
        app: helm-warpper
    spec:
      volumes:
          - name: warpper-config
            configMap:
              name: helm-warpper-configmap
              items: 
                - key: config
                  path: helm-warpper-config.yaml
      containers:
        - image: duc/helm:v5
          imagePullPolicy: IfNotPresent
          name: app
          volumeMounts:
              - name: warpper-config
                mountPath: /config
          command:
              - "/app"
              - "--config=/config/helm-warpper-config.yaml"
              - "--port=80"
          ports:
            - containerPort: 80
              name: http
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 10
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 10
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: helm-warpper
  name: helm-warpper-service
spec:
  ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: http
      nodePort: 32200
  selector:
    app: helm-warpper
  type: NodePort
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  labels:
    app: helm-warpper
  name: helm-warpper-ingress
spec:
  rules:
    - host: api.helm.local
      http:
        paths:
          - backend:
              serviceName: helm-warpper-service
              servicePort: 8080
            path: /
  # tls:
  # - hosts:
  #   - ingress.k8s.local
  #   secretName: tls-secret