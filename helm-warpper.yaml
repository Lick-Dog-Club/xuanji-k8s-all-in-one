apiVersion: v1
kind: ConfigMap
metadata:
  name: helm-warpper-configmap
  labels:
    app: helm-warpper
data:
  config: |
    uploadPath: /tmp/charts
    helmRepos:
      - name: xuanji
        url: http://chartmuseum-chartmuseum.default.svc.cluster.local:8080
---
apiVersion: v1
kind: Secret
metadata:
  labels:
    app: helm-warpper
  name: helm-warpper-secret
type: Opaque
data:
  kubeconfig: YXBpVmVyc2lvbjogdjEKY2x1c3RlcnM6Ci0gbmFtZTogImRlbW8iCiAgY2x1c3RlcjoKICAgIHNlcnZlcjogImh0dHBzOi8vNDcuOTguMTM1LjE4MDo2NDQzIgogICAgY2VydGlmaWNhdGUtYXV0aG9yaXR5LWRhdGE6ICJMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VOM2FrTkRRXAogICAgICBXRnhaMEYzU1VKQlowbENRVVJCVGtKbmEzRm9hMmxIT1hjd1FrRlJjMFpCUkVGVFRWSkJkMFJuV1VSV1VWRkVSWGRrY21SWFNtd0tUXAogICAgICBGZE9hRTFDTkZoRVZFbDNUVlJCZDAxVVFYZE5la1Y2VDFadldFUlVUWGROUkd0NVQxUkJkMDE2UlhwUFZtOTNSV3BGVVUxQk5FZEJNXAogICAgICBWVkZRWGhOU0FwaE0xWnBXbE14YWxsVVEwTkJVMGwzUkZGWlNrdHZXa2xvZG1OT1FWRkZRa0pSUVVSblowVlFRVVJEUTBGUmIwTm5aXAogICAgICAwVkNRVTVuTURGeFlsUlNhM2RRQ2t3ek1sWXdlaTgwWTJVMU5ETjVhbVIzWXpBM01sTmxNSFZIZVdkTlRqSmlUbWN6TUM5NVpEazRNXAogICAgICAydFNNRkJJWkhZMWRUTjRiV3RqYlRVMU9XeGlaM2tLTUdKTkt6aHhVRlpFZVdRdk5VRXpRVlZxY1djclJIRlpRbTl4WW5aTWNWaDZkXAogICAgICAyVjJTRVZTTmsxWGJqTm5kazFpV1VKd1dERm1kbmxxZDFWUlIwSmFUUXBWV0RaQ1RIRnZTbWxTYjNCRFRISk9RMUEwWm05VGVVUllRXAogICAgICBXYzNNak5YZDBRcmFETkJabEYzTVZaMWRsaHdka1paWTJOUFV6TmljR281YzBoSFkyOWpDbVl4VUROa1QxTjZSVlkyTWxOS056VnBMXAogICAgICAxSlVaMUpaVm5wMFFrdFRVRm92UjBadGQwdDNVek5QYW1WTWVuRk9UMDV6V2xjM09UQmhTelZ0T1ZOdVdWa0tjVFUyTjFjMlVtZGtSXAogICAgICBFVmtiM3BzZERneVRtNWlNVlF6VG01dk0ySTBWMWxrYVVGVllsZHpPRXRrSzBRMFUydEdRM1JtWjFad2VGUmtURmhoWW5ONFNncElaXAogICAgICBqWXdiRkJ4YzNwdE1FTkJkMFZCUVdGTmFrMURSWGRFWjFsRVZsSXdVRUZSU0M5Q1FWRkVRV2RMYTAxQk9FZEJNVlZrUlhkRlFpOTNVXAogICAgICBVWk5RVTFDQ2tGbU9IZEVVVmxLUzI5YVNXaDJZMDVCVVVWTVFsRkJSR2RuUlVKQlRVTXlNRGxMTHl0bVpucHRUbUpRUVcxbVZuZHJNXAogICAgICBVZEhUemxZVTFjdlZHMUhWeklLWW5Vd1dIQm5jVlUzYjNBMlVHb3pieTl3V2xsdVlYUkhaVXMzV1VwdE9DODRObEpDTmtsSlZtVkdMXAogICAgICAzbzNZVTA0UW5oWlRWZHZjQ3MzWVV3d00wRTRWd293ZFdoWmRHMVZiMk53Y2tZMmREUkJRM1ZrUlZZeVRGaFFPSGRXVDJ4Q1drazNiXAogICAgICBEVlhaSGR2YkVGTlZFb3hUR1ZHWWpKNE5HeFFjVTlPYzNZck1sZGhDakp1WjJsRlFUbEtXRWRRZFVJMVZtRmhUbWRzYzJveFEwUm1TXAogICAgICAwOUphbEJqY0RjMGNuaFlTVkp2Y0hCeGRGZFZVVFZXUkhCM1owdDVhalJpTUdWM1RVVUtPVGhKWTBWbFFuWnBaRFZhYVRCWWEyZEdiXAogICAgICB5dEhRMmRHVjFnMGJIaHNaVXA1VWxseVptWklWMUpFYzI1dk1tSXZhRUZJYUhGNk1reG5SVUZsWldReFp3cHJheXRTY0RJck9YazVRXAogICAgICBuUmpOM2RFZDJGcFVsbG1Rbmt6ZVhCSWFWQktlR04wU2t0c1RrVkRkVGxYVUd0Q2J6ZDRhRUU5Q2kwdExTMHRSVTVFSUVORlVsUkpSXAogICAgICBrbERRVlJGTFMwdExTMEsiCmNvbnRleHRzOiAKLSBjb250ZXh0OgogICAgY2x1c3RlcjogZGVtbwogICAgdXNlcjogaGVsbS13YXJwcGVyCiAgbmFtZTogZGVtbwpjdXJyZW50LWNvbnRleHQ6ICJkZW1vIgpraW5kOiBDb25maWcKcHJlZmVyZW5jZXM6IHt9CnVzZXJzOiAKLSBuYW1lOiBoZWxtLXdhcnBwZXIKICB1c2VyOgogICAgdG9rZW46IGV5SmhiR2NpT2lKU1V6STFOaUlzSW10cFpDSTZJbkpqTTFOSVUxbzJTSFV4VmxOTFh6UXRXVzB3T0d4NWJEUlpjM2c0ZWtwblFUZEJOekpEV0RRNVVIY2lmUS5leUpwYzNNaU9pSnJkV0psY201bGRHVnpMM05sY25acFkyVmhZMk52ZFc1MElpd2lhM1ZpWlhKdVpYUmxjeTVwYnk5elpYSjJhV05sWVdOamIzVnVkQzl1WVcxbGMzQmhZMlVpT2lKa1pXWmhkV3gwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXpaV055WlhRdWJtRnRaU0k2SW1obGJHMHRkMkZ5Y0hCbGNpMXpZUzEwYjJ0bGJpMTRjelJ4TmlJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExtNWhiV1VpT2lKb1pXeHRMWGRoY25Cd1pYSXRjMkVpTENKcmRXSmxjbTVsZEdWekxtbHZMM05sY25acFkyVmhZMk52ZFc1MEwzTmxjblpwWTJVdFlXTmpiM1Z1ZEM1MWFXUWlPaUkyWW1Rd1pEY3dZUzAyTlRkaExUUTRNMkV0WWpFd1lTMWpOVFJsWTJReE5UZzBPVGdpTENKemRXSWlPaUp6ZVhOMFpXMDZjMlZ5ZG1salpXRmpZMjkxYm5RNlpHVm1ZWFZzZERwb1pXeHRMWGRoY25Cd1pYSXRjMkVpZlEuVzJZSUFtR3loNUZBS0hSd0g3MFlEZDZLSWU3ck1BSl82STE1TVlHaWZ5OGVENU5qcnEtYkVialJuZTFhQmkyM2RSbmc0SU11ZHJoRzZBeUhINHZPNHdHaFR6OHNLVUdlSXRNeWxJa2x3SWY4TTd6Q2t3QlRhMFV1dkxPcHhHVFpxWmNXZ2ZUUkxlLWZfemYxSExEUXY1M1pVYTZPelotLTlTMk4yQ2UzNDROLUhkakxJdEM0YlhqOFRWSC13YnNpaC1iQjdmZzRNQ3ZYZkc5Q2dMcnRvNnljbGFzR2hldG0wRXlpNVFyNVRXVzRiZ2ZrZ0hra2FkZ004OGFJa1RxSGwzQjBSRXFfRU9ocEI1enhfWl9RcmJLQkNlb0NQYU9Hb0hyZ1NuSVVVM1FnVmh1V0h0V2stTnhFS3NQcTJBV250ZWowbDl3RFRzbTZlTEtnYnBnVHJnCg==
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: helm-warpper
  name: helm-warpper
spec:
  replicas: 1
  selector:
    matchLabels:
      app: helm-warpper
  template:
    metadata:
      labels:
        app: helm-warpper
    spec:
      volumes:
          - name: kubeconfig
            secret:
                secretName: helm-warpper-secret
                items: 
                  - key: kubeconfig
                    path: config
          - name: warpper-config
            configMap:
              name: helm-warpper-configmap
              items: 
                - key: config
                  path: helm-warpper-config.yaml
      containers:
        - image: duccnzj/helm:v1
          imagePullPolicy: IfNotPresent
          name: app
          volumeMounts:
              - mountPath: /.kube
                name: kubeconfig
              - name: warpper-config
                mountPath: /config
          command:
              - "/app"
              - "--kubeconfig=/.kube/config"
              - "--config=/config/helm-warpper-config.yaml"
              - "--port=80"
          ports:
            - containerPort: 80
              name: http
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 10
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 10
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: helm-warpper
  name: helm-warpper-service
spec:
  ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: http
      nodePort: 32200
  selector:
    app: helm-warpper
  type: NodePort
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  labels:
    app: helm-warpper
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-staging"
  name: helm-warpper-ingress
spec:
  rules:
    - host: api-helm.dev.whoops-cn.club
      http:
        paths:
          - backend:
              serviceName: helm-warpper-service
              servicePort: 8080
            path: /
  tls:
  - hosts:
    - api-helm.dev.whoops-cn.club
    secretName: api-helm-secret