# sa get pod deploy ing svc ns 
# delete/create ns
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: xuanji
  name: xuanji
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: xuanji
  name: xuanji
rules:
  - apiGroups: [""]
    resources: ["pods", "services", "ingresses", "nodes", "deployments", "namespaces", "pods/log"]
    verbs: ["get", "list"]
  - apiGroups: ["extensions"]
    resources: ["ingresses"]
    verbs: ["get", "list"]
  - apiGroups: ["metrics.k8s.io"]
    resources: ["pods"]
    verbs: ["get", "list"]
  - apiGroups: [""]
    resources: ["namespaces", "secrets"]
    verbs: ["create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: xuanji
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: xuanji
subjects:
  - kind: ServiceAccount
    name: xuanji
    namespace: default
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: xuanji-configmap
  labels:
    app: xuanji
data:
  env: |
    APP_NAME=玄机
    APP_KEY=base64:Lfv97LJROI10OXPQUsS7tfuujiaJRJU1Xz7HhjsXrn8=

    LOG_CHANNEL=stderr

    DB_CONNECTION=mysql
    DB_HOST=mysql
    DB_PORT=3306
    DB_DATABASE=xuanji
    DB_USERNAME=duc
    DB_PASSWORD=12345

    BROADCAST_DRIVER=log
    CACHE_DRIVER=file
    QUEUE_CONNECTION=sync
    SESSION_DRIVER=file
    SESSION_LIFETIME=120

    SSO_ENABLED=false

    GITLAB_URL=https://gitlab.whoops-cn.club/
    GITLAB_TOKEN=N2662hpBzxtwFyiW_wqi

    HELM_API_BASE_URL=http://helm-warpper-service.default.svc.cluster.local:8080

    MIX_SHELL_SOCKET_URL=https://terminal.dev.whoops-cn.club
    MIX_NS_PREFIX=devops-

    WILDCARD_DOMAIN=*.dev.whoops-cn.club

    # 自动创建 imagepullsecret
    DOCKER_USERNAME=
    DOCKER_PASSWORD=
    DOCKER_SERVER=
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: xuanji
    group: xuanji
  name: xuanji
spec:
  replicas: 1
  selector:
    matchLabels:
      app: xuanji
  template:
    metadata:
      labels:
        app: xuanji
    spec:
      volumes:
          - name: env
            configMap:
              name: xuanji-configmap
              items: 
                - key: env
                  path: .env
      serviceAccount: xuanji
      containers:
        - image: duccnzj/xuanji:v10
          imagePullPolicy: IfNotPresent
          name: app
          volumeMounts:
              - mountPath: /var/www/html/.env
                name: env
                subPath: .env
          ports:
            - containerPort: 80
              name: http
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /ping
              port: http
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 10
          readinessProbe:
            httpGet:
              path: /ping
              port: http
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 10
---
apiVersion: v1
kind: Service
metadata:
  labels:
    group: xuanji
  name: xuanji-service
spec:
  ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: http
      nodePort: 32300
  selector:
    app: xuanji
  type: NodePort
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  labels:
    group: xuanji
  name: xuanji-ingress
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  rules:
    - host: xuanji.dev.whoops-cn.club
      http:
        paths:
          - backend:
              serviceName: xuanji-service
              servicePort: http
            path: /
  tls:
  - hosts:
    - xuanji.dev.whoops-cn.club
    secretName: xuanji-secret
